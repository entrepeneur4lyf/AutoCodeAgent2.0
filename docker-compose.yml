version: "3.8"

services:
  web:
    build: .
    container_name: flask_app
    restart: unless-stopped
    env_file: .env
    ports:
      - "5000:5000"   # Your Flask app
      - "5901:5901"   # VNC
      - "6901:6901"   # noVNC
    privileged: true
    volumes:
      - .:/app
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_started

  ollama:
    image: ollama/ollama:latest
    container_name: ollama_server
    restart: unless-stopped
    ports:
      - "11434:11434"  
    volumes:
      - ollama_data:/data 

  neo4j:
    image: neo4j:4.4
    container_name: neo4j_db
    restart: unless-stopped
    env_file: 
      - .env
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_dbms_memory_pagecache_size=2G
      - NEO4J_dbms_memory_heap_initial__size=4G
      - NEO4J_dbms_memory_heap_max__size=4G
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "${NEO4J_PASSWORD}", "RETURN 1"]
      interval: 10s
      timeout: 15s
      retries: 5
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/var/lib/neo4j/plugins

  redis:
    image: "redis:7.0-alpine"
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis-data:
  ollama_data: